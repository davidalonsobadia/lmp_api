# LOCALHOST
#spring.datasource.url = jdbc:mysql://localhost:3306/lmp?createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = admin

## MYSQL OF THE EUREPLMPAS
#spring.datasource.url = jdbc:mysql://172.20.49.20:3306/lmp_i2cat?createDatabaseIfNotExist=true
spring.datasource.url = jdbc:mysql://172.20.49.20:3306/lmp?createDatabaseIfNotExist=true
spring.datasource.username = regadmin
spring.datasource.password = regadmin

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Define whether or not data.sql will be executed at the inizialitation
spring.datasource.initialize= false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Spring Boot Security configuration
security.basic.enabled=false

remote.server.url = https://172.20.49.21:9443/services/
remote.server.name = admin
remote.server.password = admin




#Fitbit
provider.fitbit.authorization.url = https://www.fitbit.com/oauth2/authorize
provider.fitbit.redirect.authorization.url = /authorization
provider.fitbit.client.id = 227VVY
provider.fitbit.response.type = code
provider.fitbit.state = DCEeFWf45A53sdfKef424
provider.fitbit.scope = activity profile weight heartrate settings location sleep nutrition social
provider.fitbit.access.token.url = https://api.fitbit.com/oauth2/token
provider.fitbit.secret.id = c1535c8ba7f9442f34db7cbec263a93e
provider.fitbit.authorization.code = code
provider.fitbit.grant.type = authorization_code
provider.fitbit.api.url = https://api.fitbit.com/1/user/-/profile.json
provider.fitbit.access.token.parameter = access_token

#Facebook
provider.facebook.authorization.url = https://www.facebook.com/dialog/oauth
provider.facebook.redirect.authorization.url = /authorization
provider.facebook.client.id = 1617987675182583
provider.facebook.response.type = code
provider.facebook.state = DCEeFWf45A53sdfKef424
provider.facebook.scope = public_profile,email,user_about_me,user_birthday,user_likes
provider.facebook.access.token.url = https://graph.facebook.com/v2.3/oauth/access_token
provider.facebook.secret.id = ac40ff181ed97d1cac92246170d36c71
provider.facebook.authorization.code = code
provider.facebook.grant.type = 
provider.facebook.api.url = https://graph.facebook.com/v2.6/me?fields=%s
provider.facebook.access.token.parameter = access_token

#LinkedIn
provider.linkedin.authorization.url = https://www.linkedin.com/oauth/v2/authorization
provider.linkedin.redirect.authorization.url = /authorization
provider.linkedin.client.id = 77e1py78h0rcec
provider.linkedin.response.type = code
provider.linkedin.state = DCEeFWf45A53sdfKef424
provider.linkedin.scope = r_basicprofile
provider.linkedin.access.token.url = https://www.linkedin.com/oauth/v2/accessToken
provider.linkedin.secret.id = tfc9U9i51mbZYfla
provider.linkedin.authorization.code = code
provider.linkedin.grant.type = authorization_code
provider.linkedin.api.url = https://api.linkedin.com/v1/people/~:(%s)?format=json
provider.linkedin.access.token.parameter = access_token

#Strava
provider.strava.authorization.url = https://www.strava.com/oauth/authorize
provider.strava.redirect.authorization.url = /authorization
provider.strava.client.id = 12531
provider.strava.response.type = code
provider.strava.state = DCEeFWf45A53sdfKef424
provider.strava.scope = view_private
provider.strava.access.token.url = https://www.strava.com/oauth/token
provider.strava.secret.id = 6b66f849a6a30babb7fa1a2380ba08536c04877b
provider.strava.authorization.code = code
provider.strava.grant.type = 
provider.strava.api.url = https://www.strava.com/api/v3/athlete
provider.strava.access.token.parameter = access_token
